name: Deploy ${{ values.name | capitalize }}

on:
  push:
    branches: main
{% raw %}
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
env:
  AWS_ECR: ${{ secrets.AWS_ECR }}
{% endraw %}
  IMAGE: ${{ values.image }}
{% raw %}
  AWS_REGION: ${{ secrets.AWS_REGION }}
{% endraw %}

jobs:
  deploy:
    name: Build & Notify Humanitec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set Tag with SHA
        run: echo "TAG=`echo $GITHUB_SHA | cut -c 1-7`" >> $GITHUB_ENV

      - run: |
          aws ecr get-login-password --region $AWS_REGION \
            | docker login \
                --username AWS \
                --password-stdin \
                $AWS_ECR
        {% raw %}env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}{% endraw %}
      - run: npm install
      - run: docker build --platform linux/amd64 . -t $AWS_ECR/$IMAGE:$TAG
      - run: docker push $AWS_ECR/$IMAGE:$TAG
{% raw %}
      - name: Inform Humanitec
        run: |-
          curl \
            --request POST 'https://api.humanitec.io/orgs/${{ secrets.HUMANITEC_ORG_ID }}/artefact-versions' \
            --header 'Authorization: Bearer ${{ secrets.HUMANITEC_TOKEN }}' \
            --header 'Content-Type: application/json' \
            --data-raw '{
                "name": "'$AWS_ECR/$IMAGE'",
                "version": "'$TAG'",
                "type": "container",
                "commit": "'$GITHUB_SHA'",
                "ref": "'$GITHUB_REF'"
            }'
      - name: Deploy using Score
        run: |
          wget https://github.com/score-spec/score-humanitec/releases/download/0.6.0/score-humanitec_0.6.0_linux_amd64.tar.gz
          tar -xvzf ./score-humanitec_0.6.0_linux_amd64.tar.gz

          ./score-humanitec delta --env development --app {% endraw %}${{ values.name }}{% raw %} --org="${{ secrets.HUMANITEC_ORG_ID }}" --token "${{ secrets.HUMANITEC_TOKEN }}" --deploy --property containers.frontend.image=$AWS_ECR/$IMAGE:$TAG
{% endraw %}
